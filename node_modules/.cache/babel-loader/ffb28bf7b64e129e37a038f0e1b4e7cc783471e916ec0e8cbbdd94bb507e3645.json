{"ast":null,"code":"var _jsxFileName = \"/Users/webwerks/Documents/logger/src/components/LoggerTable/index.js\",\n  _s = $RefreshSig$();\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport LoggerFilter from './LoggerFilter';\nimport LoggerList from './LoggerList';\nimport axios from 'axios';\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://run.mocky.io/v3/a2fbc23e-069e-4ba5-954c-cd910986f40f\";\nfunction LoggerTable() {\n  _s();\n  const [filteredLogs, setFilteredLogs] = React.useState(null);\n  const [logs, setLogs] = React.useState(null);\n  const [actionType, setActionType] = React.useState([]);\n  const [applicationType, setApplicationType] = React.useState([]);\n  // const navigate = useNavigate();\n\n  React.useEffect(() => {\n    axios.get(baseURL).then(response => {\n      const allLogs = response.data.result.auditLog;\n      setLogs(allLogs);\n      setFilteredLogs(allLogs);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (logs !== null) {\n      let actionTypeTemp = [];\n      let applicationTypeTemp = [];\n      logs.forEach(element => {\n        actionTypeTemp = [...actionTypeTemp, element.actionType];\n        applicationTypeTemp = [...applicationTypeTemp, element.applicationType];\n      });\n      actionTypeTemp = actionTypeTemp.filter((val, id, array) => array.indexOf(val) == id);\n      applicationTypeTemp = applicationTypeTemp.filter((val, id, array) => array.indexOf(val) == id);\n      setActionType(actionTypeTemp);\n      setApplicationType(applicationTypeTemp);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [logs]);\n  const updateLogList = (filterArray, fromDate, toDate, e) => {\n    e.stopPropagation();\n    let filteredArray;\n    console.log('abc');\n    const isEmpty = Object.values(filterArray).every(x => x === null || x === '' || x === 'Select');\n    if (isEmpty && !(fromDate || toDate)) {\n      setFilteredLogs(logs);\n    } else {\n      filteredArray = logs.filter(el => {\n        return el.applicationId == filterArray.applicationId || el.logId == filterArray.logId || el.actionType == filterArray.actionType || el.applicationType == filterArray.applicationType;\n      });\n      setFilteredLogs(filteredArray);\n    }\n  };\n  if (!logs) return null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(LoggerFilter, {\n      actionType: actionType,\n      applicationType: applicationType,\n      updateLogList: updateLogList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(LoggerList, {\n      logs: filteredLogs,\n      rowsPerPage: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(LoggerTable, \"BBLWGpcnvh1f6hSt1HQs/uw61Mk=\");\n_c = LoggerTable;\nexport default LoggerTable;\nvar _c;\n$RefreshReg$(_c, \"LoggerTable\");","map":{"version":3,"names":["React","LoggerFilter","LoggerList","axios","Container","baseURL","LoggerTable","filteredLogs","setFilteredLogs","useState","logs","setLogs","actionType","setActionType","applicationType","setApplicationType","useEffect","get","then","response","allLogs","data","result","auditLog","actionTypeTemp","applicationTypeTemp","forEach","element","filter","val","id","array","indexOf","updateLogList","filterArray","fromDate","toDate","e","stopPropagation","filteredArray","console","log","isEmpty","Object","values","every","x","el","applicationId","logId"],"sources":["/Users/webwerks/Documents/logger/src/components/LoggerTable/index.js"],"sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport LoggerFilter from './LoggerFilter';\nimport LoggerList from './LoggerList';\nimport axios from 'axios';\nimport { Container } from \"react-bootstrap\";\nconst baseURL = \"https://run.mocky.io/v3/a2fbc23e-069e-4ba5-954c-cd910986f40f\";\n\nfunction LoggerTable () {\n\tconst [filteredLogs, setFilteredLogs] = React.useState(null);\n\tconst [logs, setLogs] = React.useState(null);\n\tconst [actionType, setActionType] = React.useState([]);\n\tconst [applicationType, setApplicationType] = React.useState([]);\n\t// const navigate = useNavigate();\n\n    React.useEffect(() => {\n        axios.get(baseURL).then((response) => {\n  \t\t\tconst allLogs = response.data.result.auditLog;\n\t\t\tsetLogs(allLogs);\n\t\t\tsetFilteredLogs(allLogs);\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\tReact.useEffect(() => {\n\t\tif(logs !== null)\n\t\t{\n\t\t\tlet actionTypeTemp = [];\n\t\t\tlet applicationTypeTemp = [];\n\t\t\tlogs.forEach(element => {\n\t\t\t\tactionTypeTemp = [ ...actionTypeTemp, element.actionType];\n\t\t\t\tapplicationTypeTemp = [ ...applicationTypeTemp, element.applicationType];\n\t\t\t});\n\n\t\t\tactionTypeTemp = actionTypeTemp.filter((val,id,array) => array.indexOf(val) == id);\n\t\t\tapplicationTypeTemp = applicationTypeTemp.filter((val,id,array) => array.indexOf(val) == id);\n\t\t\tsetActionType(actionTypeTemp);\n\t\t\tsetApplicationType(applicationTypeTemp);\n\t\t}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [logs]);\n\tconst updateLogList = (filterArray, fromDate, toDate, e) =>  {\n\t\te.stopPropagation();\n\t\tlet filteredArray;\n\t\tconsole.log('abc');\n\t\tconst isEmpty = Object.values(filterArray).every(x => x === null || x === '' || x === 'Select');\n\t\tif(isEmpty && !(fromDate || toDate)) {\n\t\t\tsetFilteredLogs(logs);\n\t\t} else {\n\n\t\t\tfilteredArray = logs.filter((el) => {\t\n\t\t\t\treturn el.applicationId == filterArray.applicationId ||\n\t\t\t\t\tel.logId == filterArray.logId ||\n\t\t\t\t\tel.actionType == filterArray.actionType ||\n\t\t\t\t\tel.applicationType == filterArray.applicationType;\n\t\t\t}\n\t\t\t);\n\t\t\tsetFilteredLogs(filteredArray);\n\t\t}\n\t}\n\n    if (!logs) return null;\n\treturn <Container className=\"mt-3 mb-3\">\n\t\t<LoggerFilter actionType={actionType} applicationType={applicationType} updateLogList={updateLogList} />\n\t\t<LoggerList logs={filteredLogs} rowsPerPage={10} />\n\t</Container>\n}\nexport default LoggerTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}